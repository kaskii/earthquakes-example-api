// <auto-generated />
using System;
using Earthquakes.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Earthquakes.WebApi.Migrations
{
    [DbContext(typeof(EarthquakeContext))]
    [Migration("20231127164355_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Earthquakes.DataAccess.Entity.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Earthquakes.DataAccess.Entity.Earthquake", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Depth")
                        .HasColumnType("int");

                    b.Property<int>("LandId")
                        .HasColumnType("int");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(6,3)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(6,3)");

                    b.Property<decimal>("Magnitude")
                        .HasColumnType("decimal(2,1)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("LandId");

                    b.ToTable("Earthquakes");
                });

            modelBuilder.Entity("Earthquakes.DataAccess.Entity.Land", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Lands");
                });

            modelBuilder.Entity("Earthquakes.DataAccess.Entity.Earthquake", b =>
                {
                    b.HasOne("Earthquakes.DataAccess.Entity.Country", "Country")
                        .WithMany("Earthquakes")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Earthquakes.DataAccess.Entity.Land", "Land")
                        .WithMany("Earthquakes")
                        .HasForeignKey("LandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("Land");
                });

            modelBuilder.Entity("Earthquakes.DataAccess.Entity.Country", b =>
                {
                    b.Navigation("Earthquakes");
                });

            modelBuilder.Entity("Earthquakes.DataAccess.Entity.Land", b =>
                {
                    b.Navigation("Earthquakes");
                });
#pragma warning restore 612, 618
        }
    }
}
